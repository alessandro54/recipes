- calendar_days = calendar_days(days: @days, date: @date)
= render Calendars::Navigator::Component.new(date: @date, calendar: @calendar)
/ Weekdays display
.grid.grid-cols-7.font-semibold.leading-6.lg:flex-none.bg-white{
  class='rounded-t-lg bg(gray-200 dark:main-dark) text(center xs bold)'
  data-controller='lazy-images'
}
  - %w[Mon Tue Wed Thu Fri Sat Sun].each do |day|
    .flex.justify-center.py-2.text-black.font-bold.text-sm{
      class = 'border(b dark:gray-600) first:rounded-tl-lg last:rounded-tr-lg bg(secondary dark:layout-dark) text(dark dark:main-dark)'
    }
      span = day[0]
      span.sr-only.sm:not-sr-only = day[1..]
/ Calendar
.text-xs.leading-6.text-gray-700.lg:flex.shadow-lg.ring-1.ring-black.ring-opacity-5.rounded-b-lg{
  class='bg(slate-100 dark:gray-600)'
}
  .w-full
    / Desktop calendar
    .group.hidden.w-full.lg:grid.lg:grid-cols-7.lg:gap-px class="#{adaptive_styles(calendar_days.length)}"
      - calendar_days.each do |week|
        - week.each do |payload|
          = render Days::Show::DesktopComponent.new(calendar_id: @calendar.id, payload:)

    / Mobile calendar
    .group.isolate.grid.w-full.grid-cols-7.gap-px.lg:hidden.shadow-lg.rounded-b-lg{
      class="#{adaptive_styles(calendar_days.length)}"
    }
      - calendar_days.each do |week|
        - week.each do |payload|
          = render Days::Show::MobileComponent.new(calendar_id: @calendar.id, payload:)

javascript:
    var table =  document.querySelector('.isolate');

    table.children[table.children.length - 7].classList.add('rounded-bl-lg')
    table.lastChild.classList.add('rounded-br-lg')
