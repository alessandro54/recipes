.col-span-1.rounded-lg.shadow{
  id=calendar.id
  class='bg(white dark:layout-dark/80) divide(y gray-200 dark:gray-600)'
}
  .flex.w-full.items-center.justify-between.space-x-6.p-6
    .flex-1.truncate
      .flex.items-center.space-x-3
        h3.truncate.font-medium.cursor-text{
          class='text(sm gray-900 dark:white)'
          data-tooltip-target="tooltip-title-#{calendar.id}"
          data-tooltip-placement='top'
        }
          = calendar.title
        .tooltip.bg-black{
          id="tooltip-title-#{calendar.id}"
          role='tooltip'
        }
          = calendar.title
          .tooltip-arrow{ data-popper-arrow }
        - if calendar.recipes.count.positive?
          span.inline-flex.flex-shrink-0.items-center.rounded-full{
            class='px-1.5 py-0.5 text(xs green-700 dark:emerald-500) ring(1 inset green-600/20) bg(green-50 dark:emerald-800/40)'
          }
            = "Recipes: #{calendar.recipes.count}"
        - else
          span.inline-flex.flex-shrink-0.items-center.rounded-full{
            class='px-1.5 py-0.5 text(xs rose-700 dark:rose-500) ring(1 inset rose-600/20) bg(rose-50 dark:rose-800/40)'
          }
            | No recipes
      .mt-5.p-1
        - owners = calendar.owners
        - owners.take(5).each_with_index do |owner, i|
          .relative.z-10.inline-block.h-6.w-6.rounded-full{
            class="bg([#{random_color(format: :hex)}] dark:[#{random_color(type: :dark, format: :hex)}]) ring(2 white dark:gray-100)"
          }
            .h-full.text-xs.grid.place-items-center{ class = 'dark:text-white'}
              = owner.mini_name
        - if owners.count > 5
          .relative.z-10.inline-block.h-6.w-6.rounded-full.ring-2.ring-white.bg-gray-100
            .h-full.text-xs.grid.place-items-center
              = "+#{calendar.owners.count - 5}"
    p.mt-1.truncate.text-xs.text-gray-500 = time_ago_in_words(calendar.created_at)
  div
    .-mx-px.flex.divide-x{ class='divide(gray-200 dark:gray-600)' }
      .flex.w-0.flex-1
        = link_to calendar_path(calendar), class: 'relative -mr-px inline-flex w-0 flex-1 items-center justify-center gap-x-3 rounded-bl-lg border(& transparent) py-4 font-semibold text(sm gray-800 dark:gray-300 dark:hover:white) bg(dark:hover:alt-dark) transition duration-300', data: { turbo: false } do
          .w-4.h-4
            == svg('eye', type: :mini)
          | Visualize
      .-ml-px.flex.w-0.flex-1
        button.relative.inline-flex.w-0.flex-1.items-center.justify-center.gap-x-3.rounded-br-lg.py-4.text-sm.font-semibold.text-gray-900{
          class='border(& transparent) text(sm gray-900 dark:gray-300 dark:hover:white) bg(dark:hover:alt-dark) transition duration-300)'
          data-dropdown-toggle="dropdown-#{calendar.id}"
          data-dropdown-trigger='hover'
        }
          | Options
          .w-5.h-5.text-gray-400
            == svg('cog-6-tooth')
        / Dropdown menu
        .z-10.hidden.rounded-lg.shadow-xl.w-48{
          id="dropdown-#{calendar.id}"
          class='bg(white dark:layout-dark) ring(dark:1 dark:gray-800) '
        }
          ul.divide-y.divide-gray-600.py-2.text-sm{ class = 'text(gray-700 dark:white)'}
            li
              = link_to edit_calendar_path(calendar), class: 'block px-4 py-2 bg(hover:gray-100 hover:dark:alt-dark) cursor-pointer', data: { turbo: false } do
                | Edit
            li
              = link_to calendar_path(calendar), method: :delete, class: 'block px-4 py-2 bg(hover:gray-100 hover:dark:alt-dark) cursor-pointer flex items-center' do
                | Delete
                .w-4.h-4.ml-2.text-rose-400
                  = svg('trash', type: :mini)
